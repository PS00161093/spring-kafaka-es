version: '3.7'
services:
  twitter-to-kafka:
    image: ${GROUP_ID}/twitter.to.kafka:${SERVICE_VERSION:-latest}
    ports:
      - "5005:5005"
    volumes:
      - "./docker-logs:/workspace/twitter-to-kafka-service/logs"
    user: root
#    entrypoint: ["check-config-server-started.sh"]
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -Xms128m -Xmx256m"
      - "LOGGING_LEVEL_COM_MS_PS=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "KAFKA-CONFIG_TOPIC-NAME=twitter-topic"
      - "KAFKA-CONFIG_BOOTSTRAP-SERVERS=kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092"
      - "KAFKA-CONFIG_SCHEMA-REGISTRY-URL=http://schema-registry:8081"
      - "TWITTER-TO-KAFKA-SERVICE_ENABLE-MOCK-TWEETS=true"
      - "SPRING_CLOUD_CONFIG_URI=http://config-server:8888"
    networks:
      - ${GLOBAL_NETWORK:-services}
  config-server:
    image: ${GROUP_ID}/config.server:${SERVICE_VERSION:-latest}
    ports:
      - "500:5006"
    volumes:
      - "./docker-logs:/workspace/config-server/logs"
      - "/Users/prashant.sharma1thoughtworks.com/Data/work/spring-kafaka-es/config-server-repo:/Users/prashant.sharma1thoughtworks.com/Data/work/spring-kafaka-es/config-server-repo"
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006 -Xms128m -Xmx256m"
    networks:
      - ${GLOBAL_NETWORK:-services}